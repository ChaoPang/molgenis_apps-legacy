<!-- this ant script allows you to run the molgenis generator from the commandline-->
<project>
	<!-- requires app_properties and app_src property -->

	<!-- static properties shared between all apps-->
	<property file="${app_properties}" />
	<property name="molgenis.dir" value="../molgenis" />
	<property name="build.dir" value="build/classes" />
	<property name="testng.report.dir" value="target/test-output" />
	<property name="war.dir" value="dist/war" />
	<property name="war.name" value="${appname}.war" />
	<property name="webxml.dir" value="WebContent/WEB-INF/web.xml" />

	<!-- path to MOLGENIS toolkit -->
	<path id="molgenis.classpath">
		<pathelement location="${build.dir}" />
		<fileset dir="../molgenis/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="WebContent/WEB-INF/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<!-- path to app src -->
	<path id="app.classpath">
		<pathelement path="${app_src}"/>
	</path>

	<taskdef resource="testngtasks" classpathref="molgenis.classpath" />

	<!-- clean out generated and build folders -->
	<target name="clean">
		<!-- remove and create generated folder  -->
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${output_src}" />
			<fileset dir="${build.dir}" />
			<fileset dir="${output_sql}" />
			<fileset dir="${output_ccp}" />
			<fileset dir="${testng.report.dir}" />
			<fileset dir="${war.dir}" />
		</delete>
		<mkdir dir="${build.dir}" />
		<mkdir dir="${output_src}" />
		<mkdir dir="${output_sql}" />
		<mkdir dir="${testng.report.dir}" />
		<mkdir dir="${war.dir}" />
	</target>

	<!-- generate based on properties file for this app_properties-->
	<target name="generate">

		<!-- check if the molgenis project is where it is to be expected, in ../molgenis/ -->
		<condition property="dir.exists">
			<available file="${molgenis.dir}" type="dir" />
		</condition>

		<!-- check if molgenis is compiled into ${build.dir}, otherwise compile now -->
		<javac srcdir="${molgenis.dir}/src" destdir="${build.dir}" nowarn="on">
			<classpath refid="molgenis.classpath" />
		</javac>

		<!-- copy resources to build dir -->
		<copy todir="${build.dir}">
			<fileset dir="${molgenis.dir}/src" includes="**/*.xml,**/*.properties,**/*.txt,**/*.ico,**/*.js,**/*.css,**/*.jpg,**/*.png,**/*.gif,**/*.ftl" />
		</copy>

		<!-- call the generator -->
		<java classname="org.molgenis.Molgenis" fork="yes" failonerror="true">
			<classpath refid="molgenis.classpath" />
			<arg value="${app_properties}" />
		</java>

	</target>

	<target name="compile">
		<echo message="compile :${app_src}"/>
		
		<!-- compile the generated results, use fork to run it with its own memory settings -->
		<javac fork="true" srcdir="${output_src}:${app_src}" destdir="${build.dir}" nowarn="on" memoryinitialsize="256m" memorymaximumsize="512m">
			<classpath refid="molgenis.classpath" />
		</javac>

		<!-- copy resources like properties files -->
		<copy todir="${build.dir}">
			<fileset dir="${output_src}" includes="**/*.xml,**/*.properties,**/*.txt,**/*.ico" />
			<fileset refid="${app.classpath}" includes="**/*.xml,**/*.properties,**/*.txt,**/*.ico" />
			<fileset dir="${output_sql}" includes="**/*.xml,**/*.properties,**/*.txt,**/*.ico" />
		</copy>
		<copy todir="${build.dir}" flatten="true">
			<path>
				<pathelement path="${app_src}" includes="**/*.xml,**/*.properties,**/*.txt,**/*.ico" />
			</path>
		</copy>
	</target>

	<target name="test">
		<!-- run the tests -->
		<testng classpathref="molgenis.classpath" outputDir="${testng.report.dir}" haltOnFailure="true">
			<xmlfileset dir="${build.dir}" includes="testng.xml" />
			<jvmarg value="-ea" />
		</testng>

		<junitreport todir="${testng.report.dir}">
			<fileset dir="${testng.report.dir}">
				<include name="*/*.xml" />
			</fileset>

			<report format="noframes" todir="${testng.report.dir}" />
		</junitreport>

	</target>
	<!--
	<target name="javadoc">
		<javadoc access="public" destdir="${dir.javadoc}" author="true" version="true" noindex="false" use="true" classpathref="classpath">
			<fileset dir="handwritten/java" defaultexcludes="yes">
				<include name="**/*.java" />
				<exclude name="org/test/**/*.java" />
			</fileset>
			<fileset dir="generated/java" defaultexcludes="yes">
				<include name="**/*.java" />
				<exclude name="org/test/**/*.java" />
			</fileset>
		</javadoc>
	</target>

	<target name="makeWar" depends="compile">
		 the ant war task. with all resources in place, create the war file 
		<war destfile="${war.dir}/${war.name}" webxml="${webxml.dir}">
			<classes dir="${build.dir}">
				<include name="**/*" />
			</classes>
			<lib dir="../molgenis/lib">
				<include name="**/*.jar" />
			</lib>
			<lib dir="WebContent/WEB-INF/lib">
				<include name="**/*.jar" />
			</lib>
			<metainf dir="WebContent/META-INF">
			</metainf>
		</war>
	</target>
	-->
</project>