<!-- compute means generating as described, than compile the apps we depend on -->
<project>
	<!-- this name is used to name the war file -->
	<property name="app_name" value="lifelines"/>
	
	<!-- this holds all the settings for the generator -->
	<property name="app_properties" value="apps/lifelines/org/molgenis/catalogue/catalogue.molgenis.properties" />
	
	<!-- this determines what handwritten modules should be loaded -->
	<path id="app.class.path">
		<pathelement location="apps/lifelines" />
		<!--pathelement location="apps/gcc" /-->
		<pathelement location="modules/auth" />
		<pathelement location="modules/pheno" />
		<pathelement location="modules/file" />
		<pathelement location="modules/datamodel" />
		<pathelement location="modules/settings" />
		<pathelement location="modules/import"/>
		<pathelement location="modules/search"/>
		<pathelement location="modules/decorators/core" />
		<pathelement location="modules/decorators/auth" />
		<pathelement location="modules/decorators/pheno" />
		<pathelement location="modules/webserver" />
		<pathelement location="modules/matrix"/>
	</path>
	
	<!-- import all tasks from build_common: clean, generate, compile, test, war, standalone-jar -->
	<import file="build_common.xml"/>

	<!-- copied from build_common but added animaldb specific tests -->
	<target name="test">
		<!-- combine classpaths -->
		<path id="combined.class.path">
			<path refid="molgenis.classpath"/>
			<path refid="app.class.path"/>
			<path location="${output_src}"/>
		</path>
		<!-- run the tests 
		<testng classpathref="combined.class.path" outputDir="${testng.report.dir}" haltOnFailure="true">
			<xmlfileset dir="${build.dir}" includes="**/*testng.xml" />
			<classfileset dir="${build.dir}" includes="**/LifelinesdbSeleniumTest.class" />
			<jvmarg value="-ea" />
		</testng>	-->		
	</target>
	
	<target name="runOn" description="Start the application">
	    <java maxmemory="128m" classname="boot.RunStandalone" fork="yes" failonerror="true">
	        <arg value="${port}"/>
	        <classpath>
	            <path refid="molgenis.classpath" />
	            <path location="${build.dir}" />
	        </classpath>
	    </java>
	</target>
</project>
