<project>
	<!-- This name is used to name the war file -->
	<property name="app_name" value="compute" />

	<!-- This holds all the settings for the generator -->
	<property name="app_properties" value="apps/${app_name}/org/molgenis/${app_name}/${app_name}.properties" />

	<!-- This determines what handwritten modules should be loaded -->
	<path id="app.class.path">
		<pathelement location="apps/${app_name}" />
		<pathelement location="modules/auth" />
		<pathelement location="modules/compute" />
		<pathelement location="modules/pheno" />
		<pathelement location="modules/import" />
		<pathelement location="modules/settings" />
		<pathelement location="modules/file" />
		<pathelement location="apps/ngs" />
		<pathelement location="modules/datamodel" />
		<pathelement location="modules/decorators/core" />
		<pathelement location="modules/decorators/pheno" />
		<pathelement location="modules/decorators/auth" />
		<pathelement location="modules/webserver" />
	</path>

	<!-- Import all tasks from build_common: clean, generate, compile, test, war, standalone-jar -->
	<import file="build_common.xml" />
		
	<!-- Make a distribution:
	      * Generate and compile this molgenis app
	      * Bundle it with all associated dependencies and resources like manuals, example files, etc.
	      * Create a *.zip archive -->
	<target name="makedistro">
		
		<!-- Create folder structure for distro -->
		<property name="root_distro_dir" value="${user.dir}/dist/"/>
		<property name="app_distro_dir" value="${root_distro_dir}/molgenis_${app_name}/"/>
		<property name="lib_dir" value="${app_distro_dir}/lib/"/>
		<property name="templates_dir" value="${app_distro_dir}/templates/"/>
		<property name="protocols_dir" value="${app_distro_dir}/protocols/"/>
		<property name="workflows_dir" value="${app_distro_dir}/workflows/"/>
		<property name="app_module_dir" value="${user.dir}/modules/compute/" />
		
		<mkdir dir="${app_distro_dir}"/>
		
		<!-- Get SVN revision info from the commandline SVN client-->
		<exec executable="svn" output="${app_distro_dir}/svn.properties">
			<arg value="info"/>
			<arg value="http://www.molgenis.org/svn/molgenis_apps/trunk"/>
		</exec>
		<exec executable="sed" output="${app_distro_dir}/svn.properties">		
			<arg value="s/[[:space:]]//g"/>
			<arg value="${app_distro_dir}/svn.properties"/>
		</exec>
		<exec executable="sed" output="${app_distro_dir}/svn.properties">		
			<arg value="s/(.*)//"/>
			<arg value="${app_distro_dir}/svn.properties"/>
		</exec>
		<property prefix="svn" file="${app_distro_dir}/svn.properties"/>
		<echo>Creating MOLGENIS/compute distro based on SVN Revision: ${svn.Revision}</echo>
		<echo>Creating MOLGENIS/compute distro based on SVN LCD: ${svn.LastChangedDate}</echo>
		
		<!-- Delete the old distro -->
		<delete includeEmptyDirs="true" failonerror="false">
				<fileset dir="${app_distro_dir}" />
		</delete>
		
		<!-- Copy README to the distro dir -->
		<copy todir="${app_distro_dir}">
			<fileset dir="${user.dir}/apps/${app_name}/org/molgenis/${app_name}/">
				<include name="README*"/>
			</fileset>
		</copy>
		
		<!-- Copy all generic templates, protocols and workflows to the distro dir -->
		<copy todir="${templates_dir}">
		    <fileset dir="${app_module_dir}/org/molgenis/compute/templates/"/>
		</copy>
		<copy todir="${protocols_dir}">
		    <fileset dir="${app_module_dir}/protocols/"/>
		</copy>
		<copy todir="${workflows_dir}">
			<fileset dir="${app_module_dir}/workflows/"/>
		</copy>
		
		<!-- Copy all dependencies to the distro lib dir -->
		<!-- This is a manually maintained list of libs for now, but we should collect this from include statements -->
		<copy todir="${lib_dir}">
			<fileset dir="${molgenis.dir}/lib/">
				<include name="commons-io-1.3.1.jar"/>
				<include name="freemarker.jar"/>
				<include name="log4j-1.2.15.jar"/>
			</fileset>
		</copy>
						
		<!-- Create molgenis_app.jar -->
		<jar jarfile="${lib_dir}/molgenis_compute-r${svn.Revision}.jar" basedir="${build.dir}" update="false"/>
		
		<!-- Make package with 'lib','workflows','protocols' and shell script to start all -->
		<echo file="${app_distro_dir}/molgenis_compute.sh">#!/bin/bash
#
# This script runs the MOLGENIS/compute commandline with only the jars needed added to the CLASSPATH.
# To get path to this script use $(dirname -- "$0").
#

java -cp \
$(dirname -- "$0")/lib/molgenis_compute-r${svn.Revision}.jar:\
$(dirname -- "$0")/lib/commons-io-1.3.1.jar:\
$(dirname -- "$0")/lib/freemarker.jar:\
$(dirname -- "$0")/lib/log4j-1.2.15.jar \
org.molgenis.compute.commandline.ComputeCommandLine \
$*
		</echo>
		<chmod file="${app_distro_dir}/molgenis_compute.sh" perm="755"/>

		
		<zip destfile="${root_distro_dir}/molgenis_compute-r${svn.Revision}.zip" basedir="${app_distro_dir}" update="false" />
		
		<!-- Cleanup -->
		<delete includeEmptyDirs="true" failonerror="false">
				<fileset dir="${app_distro_dir}" />
		</delete>
		
	</target>
	
	<target name="clean-generate-compile-test-makedistro" depends="clean,generate,compile,test,makedistro"/>
	
</project>
